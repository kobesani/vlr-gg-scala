name: Scala CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.event.repository.name }}

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
    # - name: Set up JDK 11
    #   uses: olafurpg/setup-scala@v10
    #   with:
    #     java-version: openjdk@1.11
    - name: Caching
      id: cache-mill
      uses: actions/cache@v3
      with:
        path: ./out
        key: ${{ runner.os }}-mill-build
    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'
        check-latest: true
    - name: Check some things
      run: echo "$PWD" && ls -lha
    - name: Build Jar
      if: steps.cache-mill.outputs.cache-hit != 'true'
      run: ./mill foo.assembly && ./mill show foo.assembly
    - name: Upload Jar Artifact
      uses: actions/upload-artifact@v3
      with:
        name: foo-jar-file
        path: ./out/foo/assembly/dest/out.jar
        retention-days: 1
  
  build-alpine:
    needs: [build]
    name: Build Alpine Image
    runs-on: ubuntu-latest
    steps:
    -
      name: Checkout Repo
      uses: actions/checkout@v3
    -
      name: Download JAR artifact
      uses: actions/download-artifact@v3
      with:
        name: foo-jar-file
    -
      name: Login to Github Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.CR_PAT }}
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    -
      name: Build and Push Docker Image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:alpine-latest,${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:ALPINE-CI-${{ github.run_number}}
        file: ./Dockerfile.alpine
        cache-from: type=gha
        cache-to: type=gha,mode=max
